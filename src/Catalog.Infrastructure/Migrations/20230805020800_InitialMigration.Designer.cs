// <auto-generated />
using System;
using Catalog.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Catalog.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230805020800_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Catalog.Core.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "material.jpg",
                            Name = "Material Escolar"
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "eletronicos.jpg",
                            Name = "Eletrônicos"
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "acessorios.jpg",
                            Name = "Acessórios"
                        });
                });

            modelBuilder.Entity("Catalog.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Stock")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Caneta esferográfica",
                            ImageUrl = "caneta.jpg",
                            Name = "Caneta",
                            Price = 2.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(842),
                            Stock = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Lápis HB",
                            ImageUrl = "lapis.jpg",
                            Name = "Lápis",
                            Price = 1.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(900),
                            Stock = 70
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Borracha branca",
                            ImageUrl = "borracha.jpg",
                            Name = "Borracha",
                            Price = 1.50m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(908),
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Notebook 15 polegadas",
                            ImageUrl = "notebook.jpg",
                            Name = "Notebook",
                            Price = 3000.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(914),
                            Stock = 5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Description = "Tablet 10 polegadas",
                            ImageUrl = "tablet.jpg",
                            Name = "Tablet",
                            Price = 2500.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(919),
                            Stock = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            Description = "Celular 5 polegadas",
                            ImageUrl = "celular.jpg",
                            Name = "Celular",
                            Price = 1500.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(925),
                            Stock = 15
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Bolsa de couro",
                            ImageUrl = "bolsa.jpg",
                            Name = "Bolsa",
                            Price = 500.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(930),
                            Stock = 20
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "Carteira de couro",
                            ImageUrl = "carteira.jpg",
                            Name = "Carteira",
                            Price = 700.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(937),
                            Stock = 40
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Cinto de couro",
                            ImageUrl = "cinto.jpg",
                            Name = "Cinto",
                            Price = 400.00m,
                            RegistrationDate = new DateTime(2023, 8, 4, 23, 8, 0, 852, DateTimeKind.Local).AddTicks(942),
                            Stock = 60
                        });
                });

            modelBuilder.Entity("Catalog.Core.Entities.Product", b =>
                {
                    b.HasOne("Catalog.Core.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Catalog.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
